
# Raining Binary Effect By BigBogeyFace:

# Import Essentials:
import cv2
import numpy
import random

# Frame Setup:
Frame_Width = 1280
Frame_Height = 720

# Camera Setup:
Camera = cv2.VideoCapture(0 ,cv2.CAP_DSHOW)
Camera.set(cv2.CAP_PROP_FRAME_WIDTH ,Frame_Width)
Camera.set(cv2.CAP_PROP_FRAME_HEIGHT ,Frame_Height)
Camera.set(cv2.CAP_PROP_FPS ,30)

# Colours:
Light_Green = (0 ,255 ,0)
Medium_Green = (0 ,170 ,0)
Dark_Green = (0 ,85 ,0)
Light_Blue = (255 ,255 ,0)
Medium_Blue = (170 ,170 ,0)
Dark_Blue = (85 ,85 ,0)

# Rain Drop Globals:
Text_One = "TopTechBoy.com"
Text_Two = "TopTechBoy.com"
Text_Font = cv2.FONT_HERSHEY_TRIPLEX
Text_Scale = 1
Text_Thickness = 2
Close_Text_Color = Light_Green
Medium_Text_Color = Medium_Green
Far_Text_Color = Dark_Green
Number_Of_Rain_Drops = 30
Slow_Rain_Fall_Speed = 10
Medium_Rain_Fall_Speed = 20
Fast_Rain_Fall_Speed = 30
Small_Rain_Drops = .8
Medium_Rain_Drops = .9
Large_Rain_Drops = 1
Frame_Opacity = .6
Rain_Opacity = .8
Scalar = .4

# Initialise Rain Drop X Positions:
Drop_X_Position=[]
for i in range(0 ,Number_Of_Rain_Drops ,1):
    Drop_X_Position.append(random.randint(0 ,Frame_Width))

# Initialise Rain Drop Y Positions:
Drop_Y_Position=[]
for i in range(0 ,Number_Of_Rain_Drops ,1):
    Drop_Y_Position.append(random.randint( 0 ,Frame_Height))

# Begin Program Loop:
while True:

    # Capture And Manage Frame:
    Ignore ,Frame = Camera.read()
    Gray_Frame = cv2.cvtColor(Frame ,cv2.COLOR_BGR2GRAY)
    Flipped_Frame = cv2.flip(Gray_Frame ,1)
    BGR_Gray_Frame = cv2.cvtColor(Flipped_Frame ,cv2.COLOR_GRAY2BGR)

    # Iterate Through Rain Drop Movement:
    for i in range (Number_Of_Rain_Drops):

        # Fast Rain:
        if int(Drop_X_Position[i] % 3) == 0:
            Rain_Fall_Speed = Fast_Rain_Fall_Speed

        # Medium Rain:
        if int(Drop_X_Position[i] % 3) == 1:
            Rain_Fall_Speed = Medium_Rain_Fall_Speed

        # Slow Rain:
        if int(Drop_X_Position[i] % 3) == 2:
            Rain_Fall_Speed = Slow_Rain_Fall_Speed

        # If Rain Hits Ground:
        if int(Drop_Y_Position[i] > Frame_Height):
            Drop_Y_Position[i]=0
            Drop_X_Position[i]=(random.randint(0 ,Frame_Width))

        # Update Rain Fall Position:
        Drop_Y_Position[i] = Drop_Y_Position[i] + Rain_Fall_Speed

    # Generate Rain Frame:
    Rain_Frame = numpy.zeros([Frame_Height ,Frame_Width ,3] ,dtype = numpy.uint8)

    # Iterate Through Rain Drop Attributes:
    for i in range (Number_Of_Rain_Drops):

        # Rain 0's :
        if (i % 3) == 0:
            Text = Text_One

        # Rain 1's :
        if (i % 3) == 1:
            Text = Text_Two

        # Rain 0's or 1's :
        if (i % 3) == 2:
            if (i % 2) == 0:
                Text = Text_One
            if (i % 2) == 1:
                Text = Text_Two

        # Small Rain Drops:
        if int(Drop_X_Position[i] % 3) == 0:
            Text_Scale = Small_Rain_Drops
            Text_Color = Far_Text_Color

        # Medium Rain Drops:
        if int(Drop_X_Position[i] % 3) == 1:
            Text_Scale = Medium_Rain_Drops
            Text_Color = Medium_Text_Color

        # Large Rain Drops:
        if int(Drop_X_Position[i] % 3) == 2:
            Text_Scale = Large_Rain_Drops
            Text_Color = Close_Text_Color

        # Generate Rain Drops:
        cv2.putText(Rain_Frame ,Text ,(int(Drop_X_Position[i]) ,int(Drop_Y_Position[i])) ,
                    Text_Font ,Text_Scale ,Text_Color ,Text_Thickness ,cv2.LINE_AA)

    # Generate Display Frame (Add Rain Frame To BGR Gray Frame):
    Display_Frame = cv2.addWeighted(BGR_Gray_Frame ,Frame_Opacity ,Rain_Frame ,Rain_Opacity ,Scalar)

    # Display Rain Frame:
    cv2.imshow('Rainy Window' ,Display_Frame)
    cv2.moveWindow('Rainy Window' ,0 ,0)

    # Check For "q" To Quit:
    if cv2.waitKey(1) & 0xff == ord('q'):
        break
Camera.release()
  
